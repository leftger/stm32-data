block/ADC4:
  description: ADC register block.
  items:
  - name: ISR
    description: ADC interrupt and status register.
    byte_offset: 0
    fieldset: ISR
  - name: IER
    description: ADC interrupt enable register.
    byte_offset: 4
    fieldset: IER
  - name: CR
    description: ADC control register.
    byte_offset: 8
    fieldset: CR
  - name: CFGR1
    description: ADC configuration register 1.
    byte_offset: 12
    fieldset: CFGR1
  - name: CFGR2
    description: ADC configuration register 2.
    byte_offset: 16
    fieldset: CFGR2
  - name: SMPR
    description: ADC sampling time register.
    byte_offset: 20
    fieldset: SMPR
  - name: AWD1TR
    description: ADC watchdog threshold register.
    byte_offset: 32
    fieldset: AWD1TR
  - name: AWD2TR
    description: ADC watchdog threshold register.
    byte_offset: 36
    fieldset: AWD2TR
  - name: CHSELR
    description: ADC channel selection register [alternate].
    byte_offset: 40
    fieldset: CHSELR
  - name: CHSELR_ALTERNATE
    description: ADC channel selection register [alternate].
    byte_offset: 40
    fieldset: CHSELR_ALTERNATE
  - name: AWD3TR
    description: ADC watchdog threshold register.
    byte_offset: 44
    fieldset: AWD3TR
  - name: DR
    description: ADC data register.
    byte_offset: 64
    access: Read
    fieldset: DR
  - name: PWR
    description: ADC data register.
    byte_offset: 68
    fieldset: PWR
  - name: AWD2CR
    description: ADC Analog Watchdog 2 Configuration register.
    byte_offset: 160
    fieldset: AWD2CR
  - name: AWD3CR
    description: ADC Analog Watchdog 3 Configuration register.
    byte_offset: 164
    fieldset: AWD3CR
  - name: CALFACT
    description: ADC Calibration factor.
    byte_offset: 196
    fieldset: CALFACT
  - name: CCR
    description: ADC common configuration register.
    byte_offset: 776
    fieldset: CCR
fieldset/AWD1TR:
  description: ADC watchdog threshold register.
  fields:
  - name: LT1
    description: 'Analog watchdog 1 lower threshold These bits are written by software to define the lower threshold for the analog watchdog. Refer to Section 20.4.25: Analog window watchdog on page 638.'
    bit_offset: 0
    bit_size: 12
  - name: HT1
    description: 'Analog watchdog 1 higher threshold These bits are written by software to define the higher threshold for the analog watchdog. Refer to Section 20.4.25: Analog window watchdog on page 638.'
    bit_offset: 16
    bit_size: 12
fieldset/AWD2CR:
  description: ADC Analog Watchdog 2 Configuration register.
  fields:
  - name: AWD2CH0
    description: 'Analog watchdog channel selection These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2). Note: The channels selected through AWD2CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART is cleared to 0 by writing ADSTP to 1 (which ensures that no conversion is ongoing).'
    bit_offset: 0
    bit_size: 1
    enum: AWD2CH0
  - name: AWD2CH1
    description: 'Analog watchdog channel selection These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2). Note: The channels selected through AWD2CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART is cleared to 0 by writing ADSTP to 1 (which ensures that no conversion is ongoing).'
    bit_offset: 1
    bit_size: 1
    enum: AWD2CH1
  - name: AWD2CH2
    description: 'Analog watchdog channel selection These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2). Note: The channels selected through AWD2CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART is cleared to 0 by writing ADSTP to 1 (which ensures that no conversion is ongoing).'
    bit_offset: 2
    bit_size: 1
    enum: AWD2CH2
  - name: AWD2CH3
    description: 'Analog watchdog channel selection These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2). Note: The channels selected through AWD2CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART is cleared to 0 by writing ADSTP to 1 (which ensures that no conversion is ongoing).'
    bit_offset: 3
    bit_size: 1
    enum: AWD2CH3
  - name: AWD2CH4
    description: 'Analog watchdog channel selection These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2). Note: The channels selected through AWD2CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART is cleared to 0 by writing ADSTP to 1 (which ensures that no conversion is ongoing).'
    bit_offset: 4
    bit_size: 1
    enum: AWD2CH4
  - name: AWD2CH5
    description: 'Analog watchdog channel selection These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2). Note: The channels selected through AWD2CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART is cleared to 0 by writing ADSTP to 1 (which ensures that no conversion is ongoing).'
    bit_offset: 5
    bit_size: 1
    enum: AWD2CH5
  - name: AWD2CH6
    description: 'Analog watchdog channel selection These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2). Note: The channels selected through AWD2CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART is cleared to 0 by writing ADSTP to 1 (which ensures that no conversion is ongoing).'
    bit_offset: 6
    bit_size: 1
    enum: AWD2CH6
  - name: AWD2CH7
    description: 'Analog watchdog channel selection These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2). Note: The channels selected through AWD2CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART is cleared to 0 by writing ADSTP to 1 (which ensures that no conversion is ongoing).'
    bit_offset: 7
    bit_size: 1
    enum: AWD2CH7
  - name: AWD2CH8
    description: 'Analog watchdog channel selection These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2). Note: The channels selected through AWD2CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART is cleared to 0 by writing ADSTP to 1 (which ensures that no conversion is ongoing).'
    bit_offset: 8
    bit_size: 1
    enum: AWD2CH8
  - name: AWD2CH9
    description: 'Analog watchdog channel selection These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2). Note: The channels selected through AWD2CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART is cleared to 0 by writing ADSTP to 1 (which ensures that no conversion is ongoing).'
    bit_offset: 9
    bit_size: 1
    enum: AWD2CH9
  - name: AWD2CH10
    description: 'Analog watchdog channel selection These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2). Note: The channels selected through AWD2CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART is cleared to 0 by writing ADSTP to 1 (which ensures that no conversion is ongoing).'
    bit_offset: 10
    bit_size: 1
    enum: AWD2CH10
  - name: AWD2CH11
    description: 'Analog watchdog channel selection These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2). Note: The channels selected through AWD2CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART is cleared to 0 by writing ADSTP to 1 (which ensures that no conversion is ongoing).'
    bit_offset: 11
    bit_size: 1
    enum: AWD2CH11
  - name: AWD2CH12
    description: 'Analog watchdog channel selection These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2). Note: The channels selected through AWD2CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART is cleared to 0 by writing ADSTP to 1 (which ensures that no conversion is ongoing).'
    bit_offset: 12
    bit_size: 1
    enum: AWD2CH12
  - name: AWD2CH13
    description: 'Analog watchdog channel selection These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2). Note: The channels selected through AWD2CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART is cleared to 0 by writing ADSTP to 1 (which ensures that no conversion is ongoing).'
    bit_offset: 13
    bit_size: 1
    enum: AWD2CH13
fieldset/AWD2TR:
  description: ADC watchdog threshold register.
  fields:
  - name: LT2
    description: 'Analog watchdog 2 lower threshold These bits are written by software to define the lower threshold for the analog watchdog. Refer to Section 20.4.25: Analog window watchdog on page 638.'
    bit_offset: 0
    bit_size: 12
  - name: HT2
    description: 'Analog watchdog 2 higher threshold These bits are written by software to define the higher threshold for the analog watchdog. Refer to Section 20.4.25: Analog window watchdog on page 638.'
    bit_offset: 16
    bit_size: 12
fieldset/AWD3CR:
  description: ADC Analog Watchdog 3 Configuration register.
  fields:
  - name: AWD3CH0
    description: 'Analog watchdog channel selection These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3). Note: The channels selected through AWD3CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART is cleared to 0 by writing ADSTP to 1 (which ensures that no conversion is ongoing).'
    bit_offset: 0
    bit_size: 1
    enum: AWD3CH0
  - name: AWD3CH1
    description: 'Analog watchdog channel selection These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3). Note: The channels selected through AWD3CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART is cleared to 0 by writing ADSTP to 1 (which ensures that no conversion is ongoing).'
    bit_offset: 1
    bit_size: 1
    enum: AWD3CH1
  - name: AWD3CH2
    description: 'Analog watchdog channel selection These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3). Note: The channels selected through AWD3CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART is cleared to 0 by writing ADSTP to 1 (which ensures that no conversion is ongoing).'
    bit_offset: 2
    bit_size: 1
    enum: AWD3CH2
  - name: AWD3CH3
    description: 'Analog watchdog channel selection These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3). Note: The channels selected through AWD3CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART is cleared to 0 by writing ADSTP to 1 (which ensures that no conversion is ongoing).'
    bit_offset: 3
    bit_size: 1
    enum: AWD3CH3
  - name: AWD3CH4
    description: 'Analog watchdog channel selection These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3). Note: The channels selected through AWD3CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART is cleared to 0 by writing ADSTP to 1 (which ensures that no conversion is ongoing).'
    bit_offset: 4
    bit_size: 1
    enum: AWD3CH4
  - name: AWD3CH5
    description: 'Analog watchdog channel selection These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3). Note: The channels selected through AWD3CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART is cleared to 0 by writing ADSTP to 1 (which ensures that no conversion is ongoing).'
    bit_offset: 5
    bit_size: 1
    enum: AWD3CH5
  - name: AWD3CH6
    description: 'Analog watchdog channel selection These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3). Note: The channels selected through AWD3CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART is cleared to 0 by writing ADSTP to 1 (which ensures that no conversion is ongoing).'
    bit_offset: 6
    bit_size: 1
    enum: AWD3CH6
  - name: AWD3CH7
    description: 'Analog watchdog channel selection These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3). Note: The channels selected through AWD3CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART is cleared to 0 by writing ADSTP to 1 (which ensures that no conversion is ongoing).'
    bit_offset: 7
    bit_size: 1
    enum: AWD3CH7
  - name: AWD3CH8
    description: 'Analog watchdog channel selection These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3). Note: The channels selected through AWD3CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART is cleared to 0 by writing ADSTP to 1 (which ensures that no conversion is ongoing).'
    bit_offset: 8
    bit_size: 1
    enum: AWD3CH8
  - name: AWD3CH9
    description: 'Analog watchdog channel selection These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3). Note: The channels selected through AWD3CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART is cleared to 0 by writing ADSTP to 1 (which ensures that no conversion is ongoing).'
    bit_offset: 9
    bit_size: 1
    enum: AWD3CH9
  - name: AWD3CH10
    description: 'Analog watchdog channel selection These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3). Note: The channels selected through AWD3CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART is cleared to 0 by writing ADSTP to 1 (which ensures that no conversion is ongoing).'
    bit_offset: 10
    bit_size: 1
    enum: AWD3CH10
  - name: AWD3CH11
    description: 'Analog watchdog channel selection These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3). Note: The channels selected through AWD3CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART is cleared to 0 by writing ADSTP to 1 (which ensures that no conversion is ongoing).'
    bit_offset: 11
    bit_size: 1
    enum: AWD3CH11
  - name: AWD3CH12
    description: 'Analog watchdog channel selection These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3). Note: The channels selected through AWD3CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART is cleared to 0 by writing ADSTP to 1 (which ensures that no conversion is ongoing).'
    bit_offset: 12
    bit_size: 1
    enum: AWD3CH12
  - name: AWD3CH13
    description: 'Analog watchdog channel selection These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3). Note: The channels selected through AWD3CR must be also configured into the ADC_CHSELR registers. Refer to SQ8[3:0] for a definition of channel selection. The software is allowed to write this bit only when ADSTART is cleared to 0 by writing ADSTP to 1 (which ensures that no conversion is ongoing).'
    bit_offset: 13
    bit_size: 1
    enum: AWD3CH13
fieldset/AWD3TR:
  description: ADC watchdog threshold register.
  fields:
  - name: LT3
    description: 'Analog watchdog 3lower threshold These bits are written by software to define the lower threshold for the analog watchdog. Refer to Section 20.4.25: Analog window watchdog on page 638.'
    bit_offset: 0
    bit_size: 12
  - name: HT3
    description: 'Analog watchdog 3 higher threshold These bits are written by software to define the higher threshold for the analog watchdog. Refer to Section 20.4.25: Analog window watchdog on page 638.'
    bit_offset: 16
    bit_size: 12
fieldset/CALFACT:
  description: ADC Calibration factor.
  fields:
  - name: CALFACT
    description: 'Calibration factor These bits are written by hardware or by software. Once a calibration is complete, they are updated by hardware with the calibration factors. Software can write these bits with a new calibration factor. If the new calibration factor is different from the current one stored into the analog ADC, it is then applied once a new calibration is launched. Just after a calibration is complete, DATA[6:0] contains the calibration factor. Note: Software can write these bits only when ADEN = 1 (ADC is enabled and no calibration is ongoing and no conversion is ongoing).'
    bit_offset: 0
    bit_size: 7
fieldset/CCR:
  description: ADC common configuration register.
  fields:
  - name: PRESC
    description: 'ADC prescaler Set and cleared by software to select the frequency of the clock to the ADC. Other: Reserved Note: Software is allowed to write these bits only when the ADC is disabled (ADCAL = 0, ADSTART = 0, ADSTP = 0, ADDIS = 0 and ADEN = 0).'
    bit_offset: 18
    bit_size: 4
    enum: PRESC
  - name: VREFEN
    description: 'VsubREFINT/sub enable This bit is set and cleared by software to enable/disable the VsubREFINT/sub buffer. Note: Software is allowed to write this bit only when ADSTART is cleared to 0 by writing ADSTP to 1 (which ensures that no conversion is ongoing).'
    bit_offset: 22
    bit_size: 1
    enum: VREFEN
  - name: VSENSESEL
    description: 'Temperature sensor selection This bit is set and cleared by software to enable/disable the temperature sensor. Note: Software is allowed to write this bit only when ADSTART is cleared to 0 by writing ADSTP to 1 (which ensures that no conversion is ongoing).'
    bit_offset: 23
    bit_size: 1
    enum: VSENSESEL
fieldset/CFGR1:
  description: ADC configuration register 1.
  fields:
  - name: DMAEN
    description: 'Direct memory access enable This bit is set and cleared by software to enable the generation of DMA requests. This allows the automatic management of the converted data by the DMA controller. For more details, refer to Section : Managing converted data using the DMA on page 632. Note: The software is allowed to write this bit only when ADSTART bit is cleared to 0 by writing ADSTP to 1 (this ensures that no conversion is ongoing).'
    bit_offset: 0
    bit_size: 1
    enum: DMAEN
  - name: DMACFG
    description: 'Direct memory access configuration This bit is set and cleared by software to select between two DMA modes of operation and is effective only when DMAEN = 1. For more details, refer to Section : Managing converted data using the DMA on page 632 Note: The software is allowed to write this bit only when ADSTART bit is cleared to 0 by writing ADSTP to 1 (this ensures that no conversion is ongoing).'
    bit_offset: 1
    bit_size: 1
    enum: DMACFG
  - name: RES
    description: 'Data resolution These bits are written by software to select the resolution of the conversion. Note: The software is allowed to write these bits only when ADSTART bit is cleared to 0 by writing ADSTP to 1 (this ensures that no conversion is ongoing).'
    bit_offset: 2
    bit_size: 2
    enum: RES
  - name: SCANDIR
    description: 'Scan sequence direction This bit is set and cleared by software to select the direction in which the channels is scanned in the sequence. It is effective only if CHSELRMOD bit is cleared to 0. Note: The software is allowed to write this bit only when ADSTART bit is cleared to 0 by writing ADSTP to 1 (this ensures that no conversion is ongoing).'
    bit_offset: 4
    bit_size: 1
    enum: SCANDIR
  - name: ALIGN
    description: 'Data alignment This bit is set and cleared by software to select right or left alignment. Refer to Figure 78: Data alignment and resolution (oversampling disabled: OVSE = 0) on page 631 Note: The software is allowed to write this bit only when ADSTART bit is cleared to 0 by writing ADSTP to 1 (this ensures that no conversion is ongoing).'
    bit_offset: 5
    bit_size: 1
    enum: ALIGN
  - name: EXTSEL
    description: 'External trigger selection These bits select the external event used to trigger the start of conversion (refer to table ADC interconnection in Section 20.4.2: ADC pins and internal signals for details): Note: The software is allowed to write this bit only when ADSTART bit is cleared to 0 by writing ADSTP to 1 (this ensures that no conversion is ongoing).'
    bit_offset: 6
    bit_size: 3
    enum: EXTSEL
  - name: EXTEN
    description: 'External trigger enable and polarity selection These bits are set and cleared by software to select the external trigger polarity and enable the trigger. Note: The software is allowed to write this bit only when ADSTART bit is cleared to 0 by writing ADSTP to 1 (this ensures that no conversion is ongoing).'
    bit_offset: 10
    bit_size: 2
    enum: EXTEN
  - name: OVRMOD
    description: 'Overrun management mode This bit is set and cleared by software and configure the way data overruns are managed. Note: The software is allowed to write this bit only when ADSTART bit is cleared to 0 by writing ADSTP to 1 (this ensures that no conversion is ongoing).'
    bit_offset: 12
    bit_size: 1
    enum: OVRMOD
  - name: CONT
    description: 'Single / continuous conversion mode This bit is set and cleared by software. If it is set, conversion takes place continuously until it is cleared. Note: It is not possible to have both discontinuous mode and continuous mode enabled: it is forbidden to set both bits DISCEN = 1 and CONT = 1. Note: The software is allowed to write this bit only when ADSTART bit is cleared to 0 by writing ADSTP to 1 (this ensures that no conversion is ongoing).'
    bit_offset: 13
    bit_size: 1
    enum: CONT
  - name: WAIT
    description: 'Wait conversion mode This bit is set and cleared by software to enable/disable wait conversion mode.sup./sup Note: The software is allowed to write this bit only when ADSTART bit is cleared to 0 by writing ADSTP to 1 (this ensures that no conversion is ongoing).'
    bit_offset: 14
    bit_size: 1
    enum: WAIT
  - name: DISCEN
    description: 'Discontinuous mode This bit is set and cleared by software to enable/disable discontinuous mode. Note: It is not possible to have both discontinuous mode and continuous mode enabled: it is forbidden to set both bits DISCEN = 1 and CONT = 1. Note: The software is allowed to write this bit only when ADSTART bit is cleared to 0 by writing ADSTP to 1 (this ensures that no conversion is ongoing).'
    bit_offset: 16
    bit_size: 1
    enum: DISCEN
  - name: CHSELRMOD
    description: 'Mode selection of the CHSELR register This bit is set and cleared by software to control the ADC_CHSELR feature: Note: The software is allowed to write this bit only when ADSTART bit is cleared to 0 by writing ADSTP to 1 (this ensures that no conversion is ongoing).'
    bit_offset: 21
    bit_size: 1
    enum: CHSELRMOD
  - name: AWD1SGL
    description: 'Enable the watchdog on a single channel or on all channels This bit is set and cleared by software to enable the analog watchdog on the channel identified by the AWDCH[4:0] bits or on all the channels Note: The software is allowed to write this bit only when ADSTART bit is cleared to 0 by writing ADSTP to 1 (this ensures that no conversion is ongoing).'
    bit_offset: 22
    bit_size: 1
    enum: AWD1SGL
  - name: AWD1EN
    description: 'Analog watchdog enable This bit is set and cleared by software. Note: The software is allowed to write this bit only when ADSTART bit is cleared to 0 by writing ADSTP to 1 (this ensures that no conversion is ongoing).'
    bit_offset: 23
    bit_size: 1
    enum: AWD1EN
  - name: AWD1CH
    description: 'Analog watchdog channel selection These bits are set and cleared by software. They select the input channel to be guarded by the analog watchdog. ..... Others: Reserved The channel selected by the AWDCH[4:0] bits must be also set into the CHSELR register. Note: The software is allowed to write this bit only when ADSTART bit is cleared to 0 by writing ADSTP to 1 (this ensures that no conversion is ongoing).'
    bit_offset: 26
    bit_size: 5
    enum: AWD1CH
fieldset/CFGR2:
  description: ADC configuration register 2.
  fields:
  - name: OVSE
    description: 'Oversampler Enable This bit is set and cleared by software. Note: Software is allowed to write this bit only when ADSTART is cleared to 0 by writing ADSTP to 1 (which ensures that no conversion is ongoing).'
    bit_offset: 0
    bit_size: 1
    enum: OVSE
  - name: OVSR
    description: 'Oversampling ratio This bit filed defines the number of oversampling ratio. Note: The software is allowed to write this bit only when ADSTART is cleared to 0 by writing ADSTP to 1 (which ensures that no conversion is ongoing).'
    bit_offset: 2
    bit_size: 3
    enum: OVSR
  - name: OVSS
    description: 'Oversampling shift This bit is set and cleared by software. Others: Reserved Note: The software is allowed to write this bit only when ADSTART is cleared to 0 by writing ADSTP to 1(which ensures that no conversion is ongoing).'
    bit_offset: 5
    bit_size: 4
    enum: OVSS
  - name: TOVS
    description: 'Triggered Oversampling This bit is set and cleared by software. Note: The software is allowed to write this bit only when ADSTART is cleared to 0 by writing ADSTP to 1 (which ensures that no conversion is ongoing).'
    bit_offset: 9
    bit_size: 1
    enum: TOVS
  - name: LFTRIG
    description: 'Low frequency trigger mode enable This bit must be set by software. Note: The software is allowed to write this bit only when ADSTART bit is cleared to 0 by writing ADSTP to 1 (this ensures that no conversion is ongoing).'
    bit_offset: 29
    bit_size: 1
    enum: LFTRIG
fieldset/CHSELR:
  description: ADC channel selection register [alternate].
  fields:
  - name: CHSEL0
    description: 'Channel x selection These bits are written by software and define which channels are part of the sequence of channels to be converted. Note: The software is allowed to write this bit only when ADSTART is cleared to 0 by writing ADSTP to 1 (which ensures that no conversion is ongoing).'
    bit_offset: 0
    bit_size: 1
    enum: CHSEL0
  - name: CHSEL1
    description: 'Channel x selection These bits are written by software and define which channels are part of the sequence of channels to be converted. Note: The software is allowed to write this bit only when ADSTART is cleared to 0 by writing ADSTP to 1 (which ensures that no conversion is ongoing).'
    bit_offset: 1
    bit_size: 1
    enum: CHSEL1
  - name: CHSEL2
    description: 'Channel x selection These bits are written by software and define which channels are part of the sequence of channels to be converted. Note: The software is allowed to write this bit only when ADSTART is cleared to 0 by writing ADSTP to 1 (which ensures that no conversion is ongoing).'
    bit_offset: 2
    bit_size: 1
    enum: CHSEL2
  - name: CHSEL3
    description: 'Channel x selection These bits are written by software and define which channels are part of the sequence of channels to be converted. Note: The software is allowed to write this bit only when ADSTART is cleared to 0 by writing ADSTP to 1 (which ensures that no conversion is ongoing).'
    bit_offset: 3
    bit_size: 1
    enum: CHSEL3
  - name: CHSEL4
    description: 'Channel x selection These bits are written by software and define which channels are part of the sequence of channels to be converted. Note: The software is allowed to write this bit only when ADSTART is cleared to 0 by writing ADSTP to 1 (which ensures that no conversion is ongoing).'
    bit_offset: 4
    bit_size: 1
    enum: CHSEL4
  - name: CHSEL5
    description: 'Channel x selection These bits are written by software and define which channels are part of the sequence of channels to be converted. Note: The software is allowed to write this bit only when ADSTART is cleared to 0 by writing ADSTP to 1 (which ensures that no conversion is ongoing).'
    bit_offset: 5
    bit_size: 1
    enum: CHSEL5
  - name: CHSEL6
    description: 'Channel x selection These bits are written by software and define which channels are part of the sequence of channels to be converted. Note: The software is allowed to write this bit only when ADSTART is cleared to 0 by writing ADSTP to 1 (which ensures that no conversion is ongoing).'
    bit_offset: 6
    bit_size: 1
    enum: CHSEL6
  - name: CHSEL7
    description: 'Channel x selection These bits are written by software and define which channels are part of the sequence of channels to be converted. Note: The software is allowed to write this bit only when ADSTART is cleared to 0 by writing ADSTP to 1 (which ensures that no conversion is ongoing).'
    bit_offset: 7
    bit_size: 1
    enum: CHSEL7
  - name: CHSEL8
    description: 'Channel x selection These bits are written by software and define which channels are part of the sequence of channels to be converted. Note: The software is allowed to write this bit only when ADSTART is cleared to 0 by writing ADSTP to 1 (which ensures that no conversion is ongoing).'
    bit_offset: 8
    bit_size: 1
    enum: CHSEL8
  - name: CHSEL9
    description: 'Channel x selection These bits are written by software and define which channels are part of the sequence of channels to be converted. Note: The software is allowed to write this bit only when ADSTART is cleared to 0 by writing ADSTP to 1 (which ensures that no conversion is ongoing).'
    bit_offset: 9
    bit_size: 1
    enum: CHSEL9
  - name: CHSEL10
    description: 'Channel x selection These bits are written by software and define which channels are part of the sequence of channels to be converted. Note: The software is allowed to write this bit only when ADSTART is cleared to 0 by writing ADSTP to 1 (which ensures that no conversion is ongoing).'
    bit_offset: 10
    bit_size: 1
    enum: CHSEL10
  - name: CHSEL11
    description: 'Channel x selection These bits are written by software and define which channels are part of the sequence of channels to be converted. Note: The software is allowed to write this bit only when ADSTART is cleared to 0 by writing ADSTP to 1 (which ensures that no conversion is ongoing).'
    bit_offset: 11
    bit_size: 1
    enum: CHSEL11
  - name: CHSEL12
    description: 'Channel x selection These bits are written by software and define which channels are part of the sequence of channels to be converted. Note: The software is allowed to write this bit only when ADSTART is cleared to 0 by writing ADSTP to 1 (which ensures that no conversion is ongoing).'
    bit_offset: 12
    bit_size: 1
    enum: CHSEL12
  - name: CHSEL13
    description: 'Channel x selection These bits are written by software and define which channels are part of the sequence of channels to be converted. Note: The software is allowed to write this bit only when ADSTART is cleared to 0 by writing ADSTP to 1 (which ensures that no conversion is ongoing).'
    bit_offset: 13
    bit_size: 1
    enum: CHSEL13
fieldset/CHSELR_ALTERNATE:
  description: ADC channel selection register [alternate].
  fields:
  - name: SQ1
    description: '1st conversion of the sequence These bits are programmed by software with the channel number assigned to the 1st conversion of the sequence. 0b1111 indicates end of the sequence. When 0b1111 (end of sequence) is programmed to the lower sequence channels, these bits are ignored. Refer to SQ8[3:0] for a definition of channel selection. Note: The software is allowed to write this bit only when ADSTART is cleared to 0 by writing ADSTP to 1 (which ensures that no conversion is ongoing).'
    bit_offset: 0
    bit_size: 4
  - name: SQ2
    description: '2nd conversion of the sequence These bits are programmed by software with the channel number assigned to the 2nd conversion of the sequence. 0b1111 indicates end of the sequence. When 0b1111 (end of sequence) is programmed to the lower sequence channels, these bits are ignored. Refer to SQ8[3:0] for a definition of channel selection. Note: The software is allowed to write this bit only when ADSTART is cleared to 0 by writing ADSTP to 1 (which ensures that no conversion is ongoing).'
    bit_offset: 4
    bit_size: 4
  - name: SQ3
    description: '3rd conversion of the sequence These bits are programmed by software with the channel number assigned to the 3rd conversion of the sequence. 0b1111 indicates end of the sequence. When 0b1111 (end of sequence) is programmed to the lower sequence channels, these bits are ignored. Refer to SQ8[3:0] for a definition of channel selection. Note: The software is allowed to write this bit only when ADSTART is cleared to 0 by writing ADSTP to 1 (which ensures that no conversion is ongoing).'
    bit_offset: 8
    bit_size: 4
  - name: SQ4
    description: '4th conversion of the sequence These bits are programmed by software with the channel number assigned to the 4th conversion of the sequence. 0b1111 indicates end of the sequence. When 0b1111 (end of sequence) is programmed to the lower sequence channels, these bits are ignored. Refer to SQ8[3:0] for a definition of channel selection. Note: The software is allowed to write this bit only when ADSTART is cleared to 0 by writing ADSTP to 1(which ensures that no conversion is ongoing).'
    bit_offset: 12
    bit_size: 4
  - name: SQ5
    description: '5th conversion of the sequence These bits are programmed by software with the channel number assigned to the 5th conversion of the sequence. 0b1111 indicates end of the sequence. When 0b1111 (end of sequence) is programmed to the lower sequence channels, these bits are ignored. Refer to SQ8[3:0] for a definition of channel selection. Note: The software is allowed to write this bit only when ADSTART is cleared to 0 by writing ADSTP to 1 (which ensures that no conversion is ongoing).'
    bit_offset: 16
    bit_size: 4
  - name: SQ6
    description: '6th conversion of the sequence These bits are programmed by software with the channel number assigned to the 6th conversion of the sequence. 0b1111 indicates end of the sequence. When 0b1111 (end of sequence) is programmed to the lower sequence channels, these bits are ignored. Refer to SQ8[3:0] for a definition of channel selection. Note: The software is allowed to write this bit only when ADSTART is cleared to 0 by writing ADSTP to 1 (which ensures that no conversion is ongoing).'
    bit_offset: 20
    bit_size: 4
  - name: SQ7
    description: '7th conversion of the sequence These bits are programmed by software with the channel number assigned to the 7th conversion of the sequence. 0b1111 indicates end of the sequence. When 0b1111 (end of sequence) is programmed to the lower sequence channels, these bits are ignored. Refer to SQ8[3:0] for a definition of channel selection. Note: The software is allowed to write this bit only when ADSTART is cleared to 0 by writing ADSTP to 1 (which ensures that no conversion is ongoing).'
    bit_offset: 24
    bit_size: 4
  - name: SQ8
    description: '8th conversion of the sequence These bits are programmed by software with the channel number assigned to the 8th conversion of the sequence. 0b1111 indicates the end of the sequence. When 0b1111 (end of sequence) is programmed to the lower sequence channels, these bits are ignored. ... Note: The software is allowed to write this bit only when ADSTART is cleared to 0 by writing ADSTP to 1 (which ensures that no conversion is ongoing).'
    bit_offset: 28
    bit_size: 4
    enum: SQ8
fieldset/CR:
  description: ADC control register.
  fields:
  - name: ADEN
    description: 'ADC enable command This bit is set by software to enable the ADC. The ADC is effectively ready to operate once the ADRDY flag has been set. It is cleared by hardware when the ADC is disabled, after the execution of the ADDIS command. Note: The software is allowed to set ADEN only when all bits of CR registers are 0 (ADCAL = 0, ADSTP = 0, ADSTART = 0, ADDIS = 0 and ADEN = 0).'
    bit_offset: 0
    bit_size: 1
    enum: ADEN
  - name: ADDIS
    description: 'ADC disable command This bit is set by software to disable the ADC (ADDIS command) and put it into power-down state (OFF state). It is cleared by hardware once the ADC is effectively disabled (ADEN is also cleared by hardware at this time). Note: Setting ADDIS to 1 is only effective when ADEN = 1 and ADSTART = 0 (which ensures that no conversion is ongoing).'
    bit_offset: 1
    bit_size: 1
    enum: ADDIS
  - name: ADSTART
    description: 'ADC start conversion command This bit is set by software to start ADC conversion. Depending on the EXTEN [1:0] configuration bits, a conversion either starts immediately (software trigger configuration) or once a hardware trigger event occurs (hardware trigger configuration). It is cleared by hardware: In single conversion mode (CONT = 0, DISCEN = 0), when software trigger is selected (EXTEN = 00): at the assertion of the end of Conversion Sequence (EOS) flag. In discontinuous conversion mode(CONT=0, DISCEN = 1), when the software trigger is selected (EXTEN = 00): at the assertion of the end of Conversion (EOC) flag. In all other cases: after the execution of the ADSTP command, at the same time as the ADSTP bit is cleared by hardware. Note: The software is allowed to set ADSTART only when ADEN = 1 and ADDIS = 0 (ADC is enabled and there is no pending request to disable the ADC).'
    bit_offset: 2
    bit_size: 1
    enum: ADSTART
  - name: ADSTP
    description: 'ADC stop conversion command This bit is set by software to stop and discard an ongoing conversion (ADSTP Command). It is cleared by hardware when the conversion is effectively discarded and the ADC is ready to accept a new start conversion command. Note: To clear the A/D converter state, ADSTP must be set to 1 even if ADSTART is cleared to 0 after the software trigger A/D conversion. It is recommended to set ADSTP to 1 whenever the configuration needs to be modified.'
    bit_offset: 4
    bit_size: 1
    enum: ADSTP
  - name: ADVREGEN
    description: 'ADC voltage regulator enable This bit is set by software, to enable the ADC internal voltage regulator. The voltage regulator output is available after tsubADCVREG_SETUP/sub. It is cleared by software to disable the voltage regulator. It can be cleared only if ADEN is et to 0. Note: The software is allowed to program this bit field only when the ADC is disabled (ADCAL = 0, ADSTART = 0, ADSTP = 0, ADDIS = 0 and ADEN = 0).'
    bit_offset: 28
    bit_size: 1
    enum: ADVREGEN
  - name: ADCAL
    description: 'ADC calibration This bit is set by software to start the calibration of the ADC. It is cleared by hardware after calibration is complete. Note: The software is allowed to set ADCAL only when the ADC is disabled (ADCAL = 0, ADSTART = 0, ADSTP = 0, ADDIS = 0, AUTOFF = 0, and ADEN = 0). Note: The software is allowed to update the calibration factor by writing CALFACT only when ADEN is set to 1 and ADSTART is cleared to 0 by writing ADSTP to 1 (ADC enabled and no conversion is ongoing).'
    bit_offset: 31
    bit_size: 1
    enum: ADCAL
fieldset/DR:
  description: ADC data register.
  fields:
  - name: DATA
    description: 'Converted data These bits are read-only. They contain the conversion result from the last converted channel. The data are left- or right-aligned as shown in Figure 78: Data alignment and resolution (oversampling disabled: OVSE = 0) on page 631. Just after a calibration is complete, DATA[6:0] contains the calibration factor.'
    bit_offset: 0
    bit_size: 16
fieldset/IER:
  description: ADC interrupt enable register.
  fields:
  - name: ADRDYIE
    description: 'ADC ready interrupt enable This bit is set and cleared by software to enable/disable the ADC Ready interrupt. Note: The software is allowed to write this bit only when ADSTART bit is cleared to 0 by writing ADSTP to 1 (this ensures that no conversion is ongoing).'
    bit_offset: 0
    bit_size: 1
    enum: ADRDYIE
  - name: EOSMPIE
    description: 'End of sampling flag interrupt enable This bit is set and cleared by software to enable/disable the end of the sampling phase interrupt. Note: The software is allowed to write this bit only when ADSTART bit is cleared to 0 by writing ADSTP to 1 (this ensures that no conversion is ongoing).'
    bit_offset: 1
    bit_size: 1
    enum: EOSMPIE
  - name: EOCIE
    description: 'End of conversion interrupt enable This bit is set and cleared by software to enable/disable the end of conversion interrupt. Note: The software is allowed to write this bit only when ADSTART bit is cleared to 0 by writing ADSTP to 1 (this ensures that no conversion is ongoing).'
    bit_offset: 2
    bit_size: 1
    enum: EOCIE
  - name: EOSIE
    description: 'End of conversion sequence interrupt enable This bit is set and cleared by software to enable/disable the end of sequence of conversions interrupt. Note: The software is allowed to write this bit only when ADSTART bit is cleared to 0 by writing ADSTP to 1 (this ensures that no conversion is ongoing).'
    bit_offset: 3
    bit_size: 1
    enum: EOSIE
  - name: OVRIE
    description: 'Overrun interrupt enable This bit is set and cleared by software to enable/disable the overrun interrupt. Note: The software is allowed to write this bit only when ADSTART bit is cleared to 0 by writing ADSTP to 1 (this ensures that no conversion is ongoing).'
    bit_offset: 4
    bit_size: 1
    enum: OVRIE
  - name: AWD1IE
    description: 'Analog watchdog 1 interrupt enable This bit is set and cleared by software to enable/disable the analog watchdog interrupt. Note: The Software is allowed to write this bit only when ADSTART bit is cleared to 0 by writing ADSTP to 1 (this ensures that no conversion is ongoing).'
    bit_offset: 7
    bit_size: 1
    enum: AWD1IE
  - name: AWD2IE
    description: 'Analog watchdog 2 interrupt enable This bit is set and cleared by software to enable/disable the analog watchdog interrupt. Note: The Software is allowed to write this bit only when ADSTART bit is cleared to 0 by writing ADSTP to 1 (this ensures that no conversion is ongoing).'
    bit_offset: 8
    bit_size: 1
    enum: AWD2IE
  - name: AWD3IE
    description: 'Analog watchdog 3 interrupt enable This bit is set and cleared by software to enable/disable the analog watchdog interrupt. Note: The Software is allowed to write this bit only when ADSTART bit is cleared to 0 by writing ADSTP to 1 (this ensures that no conversion is ongoing).'
    bit_offset: 9
    bit_size: 1
    enum: AWD3IE
  - name: EOCALIE
    description: 'End of calibration interrupt enable This bit is set and cleared by software to enable/disable the end of calibration interrupt. Note: The software is allowed to write this bit only when ADSTART bit is cleared to 0 by writing ADSTP to 1 (this ensures that no conversion is ongoing).'
    bit_offset: 11
    bit_size: 1
    enum: EOCALIE
  - name: LDORDYIE
    description: 'LDO ready interrupt enable This bit is set and cleared by software. It is used to enable/disable the LDORDY interrupt. Note: The software is allowed to write this bit only when ADSTART bit is cleared to 0 by writing ADSTP to 1 (this ensure that no conversion is ongoing).'
    bit_offset: 12
    bit_size: 1
    enum: LDORDYIE
fieldset/ISR:
  description: ADC interrupt and status register.
  fields:
  - name: ADRDY
    description: ADC ready This bit is set by hardware after the ADC has been enabled (ADEN = 1) and when the ADC reaches a state where it is ready to accept conversion requests. It is cleared by software writing 1 to it.
    bit_offset: 0
    bit_size: 1
    enum: ADRDY
  - name: EOSMP
    description: End of sampling flag This bit is set by hardware during the conversion, at the end of the sampling phase.It is cleared by software by writing 1 to it.
    bit_offset: 1
    bit_size: 1
    enum: EOSMP
  - name: EOC
    description: End of conversion flag This bit is set by hardware at the end of each conversion of a channel when a new data result is available in the DR register. It is cleared by software writing 1 to it or by reading the ADC_DR register.
    bit_offset: 2
    bit_size: 1
    enum: EOC
  - name: EOS
    description: End of sequence flag This bit is set by hardware at the end of the conversion of a sequence of channels selected by the CHSEL bits. It is cleared by software writing 1 to it.
    bit_offset: 3
    bit_size: 1
    enum: EOS
  - name: OVR
    description: ADC overrun This bit is set by hardware when an overrun occurs, meaning that a new conversion has complete while the EOC flag was already set. It is cleared by software writing 1 to it.
    bit_offset: 4
    bit_size: 1
    enum: OVR
  - name: AWD1
    description: Analog watchdog 1 flag This bit is set by hardware when the converted voltage crosses the values programmed in TR1 and ADC_HR1 registers. It is cleared by software by writing 1 to it.
    bit_offset: 7
    bit_size: 1
    enum: AWD1
  - name: AWD2
    description: Analog watchdog 2 flag This bit is set by hardware when the converted voltage crosses the values programmed in AWD2TR and ADC_AWD2TR registers. It is cleared by software writing 1 to it.
    bit_offset: 8
    bit_size: 1
    enum: AWD2
  - name: AWD3
    description: Analog watchdog 3 flag This bit is set by hardware when the converted voltage crosses the values programmed in AWD3TR and ADC_AWD3TR registers. It is cleared by software by writing 1 to it.
    bit_offset: 9
    bit_size: 1
    enum: AWD3
  - name: EOCAL
    description: End of calibration flag This bit is set by hardware when calibration is complete. It is cleared by software writing 1 to it.
    bit_offset: 11
    bit_size: 1
    enum: EOCAL
  - name: LDORDY
    description: LDO ready This bit is set by hardware. It indicates that the ADC internal LDO output is ready. It is cleared by software by writing 1 to it.
    bit_offset: 12
    bit_size: 1
    enum: LDORDY
fieldset/PWR:
  description: ADC data register.
  fields:
  - name: AUTOFF
    description: 'Auto-off mode bit This bit is set and cleared by software. it is used to enable/disable the Auto-off mode. Note: The software is allowed to write this bit only when ADEN bit is cleared to 0 (this ensures that no conversion is ongoing).'
    bit_offset: 0
    bit_size: 1
    enum: AUTOFF
  - name: DPD
    description: 'Deep-power-down mode bit This bit is set and cleared by software. It is used to enable/disable Deep-power-down mode in Autonomous mode when the ADC is not used. Note: The software is allowed to write this bit only when ADEN bit is cleared to 0 (this ensures that no conversion is ongoing). Note: Setting DPD in Auto-off mode automatically disables the LDO.'
    bit_offset: 1
    bit_size: 1
    enum: DPD
fieldset/SMPR:
  description: ADC sampling time register.
  fields:
  - name: SMP1
    description: 'Sampling time selection 1 These bits are written by software to select the sampling time that applies to all channels. Note: The software is allowed to write this bit only when ADSTART is cleared to 0 by writing ADSTP to 1 (which ensures that no conversion is ongoing).'
    bit_offset: 0
    bit_size: 3
    enum: SMP1
  - name: SMP2
    description: 'Sampling time selection 2 These bits are written by software to select the sampling time that applies to all channels. Note: The software is allowed to write this bit only when ADSTART is cleared to 0 by writing ADSTP to 1 (which ensures that no conversion is ongoing).'
    bit_offset: 4
    bit_size: 3
    enum: SMP2
  - name: SMPSEL0
    description: 'Channel-x sampling time selection These bits are written by software to define which sampling time is used. Note: The software is allowed to write this bit only when ADSTART is cleared to 0 by writing ADSTP to 1 (which ensures that no conversion is ongoing).'
    bit_offset: 8
    bit_size: 1
    enum: SMPSEL0
  - name: SMPSEL1
    description: 'Channel-x sampling time selection These bits are written by software to define which sampling time is used. Note: The software is allowed to write this bit only when ADSTART is cleared to 0 by writing ADSTP to 1 (which ensures that no conversion is ongoing).'
    bit_offset: 9
    bit_size: 1
    enum: SMPSEL1
  - name: SMPSEL2
    description: 'Channel-x sampling time selection These bits are written by software to define which sampling time is used. Note: The software is allowed to write this bit only when ADSTART is cleared to 0 by writing ADSTP to 1 (which ensures that no conversion is ongoing).'
    bit_offset: 10
    bit_size: 1
    enum: SMPSEL2
  - name: SMPSEL3
    description: 'Channel-x sampling time selection These bits are written by software to define which sampling time is used. Note: The software is allowed to write this bit only when ADSTART is cleared to 0 by writing ADSTP to 1 (which ensures that no conversion is ongoing).'
    bit_offset: 11
    bit_size: 1
    enum: SMPSEL3
  - name: SMPSEL4
    description: 'Channel-x sampling time selection These bits are written by software to define which sampling time is used. Note: The software is allowed to write this bit only when ADSTART is cleared to 0 by writing ADSTP to 1 (which ensures that no conversion is ongoing).'
    bit_offset: 12
    bit_size: 1
    enum: SMPSEL4
  - name: SMPSEL5
    description: 'Channel-x sampling time selection These bits are written by software to define which sampling time is used. Note: The software is allowed to write this bit only when ADSTART is cleared to 0 by writing ADSTP to 1 (which ensures that no conversion is ongoing).'
    bit_offset: 13
    bit_size: 1
    enum: SMPSEL5
  - name: SMPSEL6
    description: 'Channel-x sampling time selection These bits are written by software to define which sampling time is used. Note: The software is allowed to write this bit only when ADSTART is cleared to 0 by writing ADSTP to 1 (which ensures that no conversion is ongoing).'
    bit_offset: 14
    bit_size: 1
    enum: SMPSEL6
  - name: SMPSEL7
    description: 'Channel-x sampling time selection These bits are written by software to define which sampling time is used. Note: The software is allowed to write this bit only when ADSTART is cleared to 0 by writing ADSTP to 1 (which ensures that no conversion is ongoing).'
    bit_offset: 15
    bit_size: 1
    enum: SMPSEL7
  - name: SMPSEL8
    description: 'Channel-x sampling time selection These bits are written by software to define which sampling time is used. Note: The software is allowed to write this bit only when ADSTART is cleared to 0 by writing ADSTP to 1 (which ensures that no conversion is ongoing).'
    bit_offset: 16
    bit_size: 1
    enum: SMPSEL8
  - name: SMPSEL9
    description: 'Channel-x sampling time selection These bits are written by software to define which sampling time is used. Note: The software is allowed to write this bit only when ADSTART is cleared to 0 by writing ADSTP to 1 (which ensures that no conversion is ongoing).'
    bit_offset: 17
    bit_size: 1
    enum: SMPSEL9
  - name: SMPSEL10
    description: 'Channel-x sampling time selection These bits are written by software to define which sampling time is used. Note: The software is allowed to write this bit only when ADSTART is cleared to 0 by writing ADSTP to 1 (which ensures that no conversion is ongoing).'
    bit_offset: 18
    bit_size: 1
    enum: SMPSEL10
  - name: SMPSEL11
    description: 'Channel-x sampling time selection These bits are written by software to define which sampling time is used. Note: The software is allowed to write this bit only when ADSTART is cleared to 0 by writing ADSTP to 1 (which ensures that no conversion is ongoing).'
    bit_offset: 19
    bit_size: 1
    enum: SMPSEL11
  - name: SMPSEL12
    description: 'Channel-x sampling time selection These bits are written by software to define which sampling time is used. Note: The software is allowed to write this bit only when ADSTART is cleared to 0 by writing ADSTP to 1 (which ensures that no conversion is ongoing).'
    bit_offset: 20
    bit_size: 1
    enum: SMPSEL12
  - name: SMPSEL13
    description: 'Channel-x sampling time selection These bits are written by software to define which sampling time is used. Note: The software is allowed to write this bit only when ADSTART is cleared to 0 by writing ADSTP to 1 (which ensures that no conversion is ongoing).'
    bit_offset: 21
    bit_size: 1
    enum: SMPSEL13
enum/ADCAL:
  bit_size: 1
  variants:
  - name: B_0x0
    description: Calibration complete.
    value: 0
  - name: B_0x1
    description: Write 1 to calibrate the ADC. Read at 1 means that a calibration is in progress.
    value: 1
enum/ADDIS:
  bit_size: 1
  variants:
  - name: B_0x0
    description: No ADDIS command ongoing.
    value: 0
  - name: B_0x1
    description: Write 1 to disable the ADC. Read 1 means that an ADDIS command is in progress.
    value: 1
enum/ADEN:
  bit_size: 1
  variants:
  - name: B_0x0
    description: ADC is disabled (OFF state).
    value: 0
  - name: B_0x1
    description: Write 1 to enable the ADC.
    value: 1
enum/ADRDY:
  bit_size: 1
  variants:
  - name: B_0x0
    description: ADC not yet ready to start conversion (or the flag event was already acknowledged and cleared by software).
    value: 0
  - name: B_0x1
    description: ADC is ready to start conversion.
    value: 1
enum/ADRDYIE:
  bit_size: 1
  variants:
  - name: B_0x0
    description: ADRDY interrupt disabled.
    value: 0
  - name: B_0x1
    description: ADRDY interrupt enabled. An interrupt is generated when the ADRDY bit is set.
    value: 1
enum/ADSTART:
  bit_size: 1
  variants:
  - name: B_0x0
    description: No ADC conversion is ongoing.
    value: 0
  - name: B_0x1
    description: Write 1 to start the ADC. Read 1 means that the ADC is operating and may be converting.
    value: 1
enum/ADSTP:
  bit_size: 1
  variants:
  - name: B_0x0
    description: No ADC stop conversion command ongoing.
    value: 0
  - name: B_0x1
    description: Write 1 to stop the ADC. Read 1 means that an ADSTP command is in progress.
    value: 1
enum/ADVREGEN:
  bit_size: 1
  variants:
  - name: B_0x0
    description: ADC voltage regulator disabled.
    value: 0
  - name: B_0x1
    description: ADC voltage regulator enabled.
    value: 1
enum/ALIGN:
  bit_size: 1
  variants:
  - name: B_0x0
    description: Right alignment.
    value: 0
  - name: B_0x1
    description: Left alignment.
    value: 1
enum/AUTOFF:
  bit_size: 1
  variants:
  - name: B_0x0
    description: Auto-off mode disabled.
    value: 0
  - name: B_0x1
    description: Auto-off mode enabled.
    value: 1
enum/AWD1:
  bit_size: 1
  variants:
  - name: B_0x0
    description: No analog watchdog event occurred (or the flag event was already acknowledged and cleared by software).
    value: 0
  - name: B_0x1
    description: Analog watchdog event occurred.
    value: 1
enum/AWD1CH:
  bit_size: 5
  variants:
  - name: B_0x0
    description: ADC analog input Channel 0 monitored by AWD.
    value: 0
  - name: B_0x1
    description: ADC analog input Channel 1 monitored by AWD.
    value: 1
  - name: B_0xB
    description: ADC analog input Channel 11 monitored by AWD.
    value: 11
enum/AWD1EN:
  bit_size: 1
  variants:
  - name: B_0x0
    description: Analog watchdog 1 disabled.
    value: 0
  - name: B_0x1
    description: Analog watchdog 1 enabled.
    value: 1
enum/AWD1IE:
  bit_size: 1
  variants:
  - name: B_0x0
    description: Analog watchdog interrupt disabled.
    value: 0
  - name: B_0x1
    description: Analog watchdog interrupt enabled.
    value: 1
enum/AWD1SGL:
  bit_size: 1
  variants:
  - name: B_0x0
    description: Analog watchdog 1 enabled on all channels.
    value: 0
  - name: B_0x1
    description: Analog watchdog 1 enabled on a single channel.
    value: 1
enum/AWD2:
  bit_size: 1
  variants:
  - name: B_0x0
    description: No analog watchdog event occurred (or the flag event was already acknowledged and cleared by software).
    value: 0
  - name: B_0x1
    description: Analog watchdog event occurred.
    value: 1
enum/AWD2CH0:
  bit_size: 1
  variants:
  - name: B_0x0
    description: ADC analog channel-x is not monitored by AWD2.
    value: 0
  - name: B_0x1
    description: ADC analog channel-x is monitored by AWD2.
    value: 1
enum/AWD2CH1:
  bit_size: 1
  variants:
  - name: B_0x0
    description: ADC analog channel-x is not monitored by AWD2.
    value: 0
  - name: B_0x1
    description: ADC analog channel-x is monitored by AWD2.
    value: 1
enum/AWD2CH10:
  bit_size: 1
  variants:
  - name: B_0x0
    description: ADC analog channel-x is not monitored by AWD2.
    value: 0
  - name: B_0x1
    description: ADC analog channel-x is monitored by AWD2.
    value: 1
enum/AWD2CH11:
  bit_size: 1
  variants:
  - name: B_0x0
    description: ADC analog channel-x is not monitored by AWD2.
    value: 0
  - name: B_0x1
    description: ADC analog channel-x is monitored by AWD2.
    value: 1
enum/AWD2CH12:
  bit_size: 1
  variants:
  - name: B_0x0
    description: ADC analog channel-x is not monitored by AWD2.
    value: 0
  - name: B_0x1
    description: ADC analog channel-x is monitored by AWD2.
    value: 1
enum/AWD2CH13:
  bit_size: 1
  variants:
  - name: B_0x0
    description: ADC analog channel-x is not monitored by AWD2.
    value: 0
  - name: B_0x1
    description: ADC analog channel-x is monitored by AWD2.
    value: 1
enum/AWD2CH2:
  bit_size: 1
  variants:
  - name: B_0x0
    description: ADC analog channel-x is not monitored by AWD2.
    value: 0
  - name: B_0x1
    description: ADC analog channel-x is monitored by AWD2.
    value: 1
enum/AWD2CH3:
  bit_size: 1
  variants:
  - name: B_0x0
    description: ADC analog channel-x is not monitored by AWD2.
    value: 0
  - name: B_0x1
    description: ADC analog channel-x is monitored by AWD2.
    value: 1
enum/AWD2CH4:
  bit_size: 1
  variants:
  - name: B_0x0
    description: ADC analog channel-x is not monitored by AWD2.
    value: 0
  - name: B_0x1
    description: ADC analog channel-x is monitored by AWD2.
    value: 1
enum/AWD2CH5:
  bit_size: 1
  variants:
  - name: B_0x0
    description: ADC analog channel-x is not monitored by AWD2.
    value: 0
  - name: B_0x1
    description: ADC analog channel-x is monitored by AWD2.
    value: 1
enum/AWD2CH6:
  bit_size: 1
  variants:
  - name: B_0x0
    description: ADC analog channel-x is not monitored by AWD2.
    value: 0
  - name: B_0x1
    description: ADC analog channel-x is monitored by AWD2.
    value: 1
enum/AWD2CH7:
  bit_size: 1
  variants:
  - name: B_0x0
    description: ADC analog channel-x is not monitored by AWD2.
    value: 0
  - name: B_0x1
    description: ADC analog channel-x is monitored by AWD2.
    value: 1
enum/AWD2CH8:
  bit_size: 1
  variants:
  - name: B_0x0
    description: ADC analog channel-x is not monitored by AWD2.
    value: 0
  - name: B_0x1
    description: ADC analog channel-x is monitored by AWD2.
    value: 1
enum/AWD2CH9:
  bit_size: 1
  variants:
  - name: B_0x0
    description: ADC analog channel-x is not monitored by AWD2.
    value: 0
  - name: B_0x1
    description: ADC analog channel-x is monitored by AWD2.
    value: 1
enum/AWD2IE:
  bit_size: 1
  variants:
  - name: B_0x0
    description: Analog watchdog interrupt disabled.
    value: 0
  - name: B_0x1
    description: Analog watchdog interrupt enabled.
    value: 1
enum/AWD3:
  bit_size: 1
  variants:
  - name: B_0x0
    description: No analog watchdog event occurred (or the flag event was already acknowledged and cleared by software).
    value: 0
  - name: B_0x1
    description: Analog watchdog event occurred.
    value: 1
enum/AWD3CH0:
  bit_size: 1
  variants:
  - name: B_0x0
    description: ADC analog channel-x is not monitored by AWD3.
    value: 0
  - name: B_0x1
    description: ADC analog channel-x is monitored by AWD3.
    value: 1
enum/AWD3CH1:
  bit_size: 1
  variants:
  - name: B_0x0
    description: ADC analog channel-x is not monitored by AWD3.
    value: 0
  - name: B_0x1
    description: ADC analog channel-x is monitored by AWD3.
    value: 1
enum/AWD3CH10:
  bit_size: 1
  variants:
  - name: B_0x0
    description: ADC analog channel-x is not monitored by AWD3.
    value: 0
  - name: B_0x1
    description: ADC analog channel-x is monitored by AWD3.
    value: 1
enum/AWD3CH11:
  bit_size: 1
  variants:
  - name: B_0x0
    description: ADC analog channel-x is not monitored by AWD3.
    value: 0
  - name: B_0x1
    description: ADC analog channel-x is monitored by AWD3.
    value: 1
enum/AWD3CH12:
  bit_size: 1
  variants:
  - name: B_0x0
    description: ADC analog channel-x is not monitored by AWD3.
    value: 0
  - name: B_0x1
    description: ADC analog channel-x is monitored by AWD3.
    value: 1
enum/AWD3CH13:
  bit_size: 1
  variants:
  - name: B_0x0
    description: ADC analog channel-x is not monitored by AWD3.
    value: 0
  - name: B_0x1
    description: ADC analog channel-x is monitored by AWD3.
    value: 1
enum/AWD3CH2:
  bit_size: 1
  variants:
  - name: B_0x0
    description: ADC analog channel-x is not monitored by AWD3.
    value: 0
  - name: B_0x1
    description: ADC analog channel-x is monitored by AWD3.
    value: 1
enum/AWD3CH3:
  bit_size: 1
  variants:
  - name: B_0x0
    description: ADC analog channel-x is not monitored by AWD3.
    value: 0
  - name: B_0x1
    description: ADC analog channel-x is monitored by AWD3.
    value: 1
enum/AWD3CH4:
  bit_size: 1
  variants:
  - name: B_0x0
    description: ADC analog channel-x is not monitored by AWD3.
    value: 0
  - name: B_0x1
    description: ADC analog channel-x is monitored by AWD3.
    value: 1
enum/AWD3CH5:
  bit_size: 1
  variants:
  - name: B_0x0
    description: ADC analog channel-x is not monitored by AWD3.
    value: 0
  - name: B_0x1
    description: ADC analog channel-x is monitored by AWD3.
    value: 1
enum/AWD3CH6:
  bit_size: 1
  variants:
  - name: B_0x0
    description: ADC analog channel-x is not monitored by AWD3.
    value: 0
  - name: B_0x1
    description: ADC analog channel-x is monitored by AWD3.
    value: 1
enum/AWD3CH7:
  bit_size: 1
  variants:
  - name: B_0x0
    description: ADC analog channel-x is not monitored by AWD3.
    value: 0
  - name: B_0x1
    description: ADC analog channel-x is monitored by AWD3.
    value: 1
enum/AWD3CH8:
  bit_size: 1
  variants:
  - name: B_0x0
    description: ADC analog channel-x is not monitored by AWD3.
    value: 0
  - name: B_0x1
    description: ADC analog channel-x is monitored by AWD3.
    value: 1
enum/AWD3CH9:
  bit_size: 1
  variants:
  - name: B_0x0
    description: ADC analog channel-x is not monitored by AWD3.
    value: 0
  - name: B_0x1
    description: ADC analog channel-x is monitored by AWD3.
    value: 1
enum/AWD3IE:
  bit_size: 1
  variants:
  - name: B_0x0
    description: Analog watchdog interrupt disabled.
    value: 0
  - name: B_0x1
    description: Analog watchdog interrupt enabled.
    value: 1
enum/CHSEL0:
  bit_size: 1
  variants:
  - name: B_0x0
    description: Input Channel-x is not selected for conversion.
    value: 0
  - name: B_0x1
    description: Input Channel-x is selected for conversion.
    value: 1
enum/CHSEL1:
  bit_size: 1
  variants:
  - name: B_0x0
    description: Input Channel-x is not selected for conversion.
    value: 0
  - name: B_0x1
    description: Input Channel-x is selected for conversion.
    value: 1
enum/CHSEL10:
  bit_size: 1
  variants:
  - name: B_0x0
    description: Input Channel-x is not selected for conversion.
    value: 0
  - name: B_0x1
    description: Input Channel-x is selected for conversion.
    value: 1
enum/CHSEL11:
  bit_size: 1
  variants:
  - name: B_0x0
    description: Input Channel-x is not selected for conversion.
    value: 0
  - name: B_0x1
    description: Input Channel-x is selected for conversion.
    value: 1
enum/CHSEL12:
  bit_size: 1
  variants:
  - name: B_0x0
    description: Input Channel-x is not selected for conversion.
    value: 0
  - name: B_0x1
    description: Input Channel-x is selected for conversion.
    value: 1
enum/CHSEL13:
  bit_size: 1
  variants:
  - name: B_0x0
    description: Input Channel-x is not selected for conversion.
    value: 0
  - name: B_0x1
    description: Input Channel-x is selected for conversion.
    value: 1
enum/CHSEL2:
  bit_size: 1
  variants:
  - name: B_0x0
    description: Input Channel-x is not selected for conversion.
    value: 0
  - name: B_0x1
    description: Input Channel-x is selected for conversion.
    value: 1
enum/CHSEL3:
  bit_size: 1
  variants:
  - name: B_0x0
    description: Input Channel-x is not selected for conversion.
    value: 0
  - name: B_0x1
    description: Input Channel-x is selected for conversion.
    value: 1
enum/CHSEL4:
  bit_size: 1
  variants:
  - name: B_0x0
    description: Input Channel-x is not selected for conversion.
    value: 0
  - name: B_0x1
    description: Input Channel-x is selected for conversion.
    value: 1
enum/CHSEL5:
  bit_size: 1
  variants:
  - name: B_0x0
    description: Input Channel-x is not selected for conversion.
    value: 0
  - name: B_0x1
    description: Input Channel-x is selected for conversion.
    value: 1
enum/CHSEL6:
  bit_size: 1
  variants:
  - name: B_0x0
    description: Input Channel-x is not selected for conversion.
    value: 0
  - name: B_0x1
    description: Input Channel-x is selected for conversion.
    value: 1
enum/CHSEL7:
  bit_size: 1
  variants:
  - name: B_0x0
    description: Input Channel-x is not selected for conversion.
    value: 0
  - name: B_0x1
    description: Input Channel-x is selected for conversion.
    value: 1
enum/CHSEL8:
  bit_size: 1
  variants:
  - name: B_0x0
    description: Input Channel-x is not selected for conversion.
    value: 0
  - name: B_0x1
    description: Input Channel-x is selected for conversion.
    value: 1
enum/CHSEL9:
  bit_size: 1
  variants:
  - name: B_0x0
    description: Input Channel-x is not selected for conversion.
    value: 0
  - name: B_0x1
    description: Input Channel-x is selected for conversion.
    value: 1
enum/CHSELRMOD:
  bit_size: 1
  variants:
  - name: B_0x0
    description: Each bit of the CHSELR register enables an input.
    value: 0
  - name: B_0x1
    description: CHSELR register is able to sequence up to 8 channels.
    value: 1
enum/CONT:
  bit_size: 1
  variants:
  - name: B_0x0
    description: Single conversion mode.
    value: 0
  - name: B_0x1
    description: Continuous conversion mode.
    value: 1
enum/DISCEN:
  bit_size: 1
  variants:
  - name: B_0x0
    description: Discontinuous mode disabled.
    value: 0
  - name: B_0x1
    description: Discontinuous mode enabled.
    value: 1
enum/DMACFG:
  bit_size: 1
  variants:
  - name: B_0x0
    description: DMA one shot mode selected.
    value: 0
  - name: B_0x1
    description: DMA circular mode selected.
    value: 1
enum/DMAEN:
  bit_size: 1
  variants:
  - name: B_0x0
    description: DMA disabled.
    value: 0
  - name: B_0x1
    description: DMA enabled.
    value: 1
enum/DPD:
  bit_size: 1
  variants:
  - name: B_0x0
    description: Deep-power-down mode disabled.
    value: 0
  - name: B_0x1
    description: Deep-power-down mode enabled.
    value: 1
enum/EOC:
  bit_size: 1
  variants:
  - name: B_0x0
    description: Channel conversion not complete (or the flag event was already acknowledged and cleared by software).
    value: 0
  - name: B_0x1
    description: Channel conversion complete.
    value: 1
enum/EOCAL:
  bit_size: 1
  variants:
  - name: B_0x0
    description: Calibration is not complete.
    value: 0
  - name: B_0x1
    description: Calibration is complete.
    value: 1
enum/EOCALIE:
  bit_size: 1
  variants:
  - name: B_0x0
    description: End of calibration interrupt disabled.
    value: 0
  - name: B_0x1
    description: End of calibration interrupt enabled.
    value: 1
enum/EOCIE:
  bit_size: 1
  variants:
  - name: B_0x0
    description: EOC interrupt disabled.
    value: 0
  - name: B_0x1
    description: EOC interrupt enabled. An interrupt is generated when the EOC bit is set.
    value: 1
enum/EOS:
  bit_size: 1
  variants:
  - name: B_0x0
    description: Conversion sequence not complete (or the flag event was already acknowledged and cleared by software).
    value: 0
  - name: B_0x1
    description: Conversion sequence complete.
    value: 1
enum/EOSIE:
  bit_size: 1
  variants:
  - name: B_0x0
    description: EOS interrupt disabled.
    value: 0
  - name: B_0x1
    description: EOS interrupt enabled. An interrupt is generated when the EOS bit is set.
    value: 1
enum/EOSMP:
  bit_size: 1
  variants:
  - name: B_0x0
    description: Not at the end of the sampling phase (or the flag event was already acknowledged and cleared by software).
    value: 0
  - name: B_0x1
    description: End of sampling phase reached.
    value: 1
enum/EOSMPIE:
  bit_size: 1
  variants:
  - name: B_0x0
    description: EOSMP interrupt disabled.
    value: 0
  - name: B_0x1
    description: EOSMP interrupt enabled. An interrupt is generated when the EOSMP bit is set.
    value: 1
enum/EXTEN:
  bit_size: 2
  variants:
  - name: B_0x0
    description: Hardware trigger detection disabled (conversions can be started by software).
    value: 0
  - name: B_0x1
    description: Hardware trigger detection on the rising edge.
    value: 1
  - name: B_0x2
    description: Hardware trigger detection on the falling edge.
    value: 2
  - name: B_0x3
    description: Hardware trigger detection on both the rising and falling edges.
    value: 3
enum/EXTSEL:
  bit_size: 3
  variants:
  - name: B_0x0
    description: adc_trg0.
    value: 0
  - name: B_0x1
    description: adc_trg1.
    value: 1
  - name: B_0x2
    description: adc_trg2.
    value: 2
  - name: B_0x3
    description: adc_trg3.
    value: 3
  - name: B_0x4
    description: adc_trg4.
    value: 4
  - name: B_0x5
    description: adc_trg5.
    value: 5
  - name: B_0x6
    description: adc_trg6.
    value: 6
  - name: B_0x7
    description: adc_trg7.
    value: 7
enum/LDORDY:
  bit_size: 1
  variants:
  - name: B_0x0
    description: ADC voltage regulator disabled.
    value: 0
  - name: B_0x1
    description: ADC voltage regulator enabled and stabilized.
    value: 1
enum/LDORDYIE:
  bit_size: 1
  variants:
  - name: B_0x0
    description: LDO ready interrupt disabled.
    value: 0
  - name: B_0x1
    description: LDO ready interrupt enabled. An interrupt is generated when the LDO output is ready.
    value: 1
enum/LFTRIG:
  bit_size: 1
  variants:
  - name: B_0x1
    description: Low frequency trigger mode enabled.
    value: 1
enum/OVR:
  bit_size: 1
  variants:
  - name: B_0x0
    description: No overrun occurred (or the flag event was already acknowledged and cleared by software).
    value: 0
  - name: B_0x1
    description: Overrun has occurred.
    value: 1
enum/OVRIE:
  bit_size: 1
  variants:
  - name: B_0x0
    description: Overrun interrupt disabled.
    value: 0
  - name: B_0x1
    description: Overrun interrupt enabled. An interrupt is generated when the OVR bit is set.
    value: 1
enum/OVRMOD:
  bit_size: 1
  variants:
  - name: B_0x0
    description: DR register is preserved with the old data when an overrun is detected.
    value: 0
  - name: B_0x1
    description: DR register is overwritten with the last conversion result when an overrun is detected.
    value: 1
enum/OVSE:
  bit_size: 1
  variants:
  - name: B_0x0
    description: Oversampler disabled.
    value: 0
  - name: B_0x1
    description: Oversampler enabled.
    value: 1
enum/OVSR:
  bit_size: 3
  variants:
  - name: B_0x0
    description: 2x.
    value: 0
  - name: B_0x1
    description: 4x.
    value: 1
  - name: B_0x2
    description: 8x.
    value: 2
  - name: B_0x3
    description: 16x.
    value: 3
  - name: B_0x4
    description: 32x.
    value: 4
  - name: B_0x5
    description: 64x.
    value: 5
  - name: B_0x6
    description: 128x.
    value: 6
  - name: B_0x7
    description: 256x.
    value: 7
enum/OVSS:
  bit_size: 4
  variants:
  - name: B_0x0
    description: No shift.
    value: 0
  - name: B_0x1
    description: Shift 1-bit.
    value: 1
  - name: B_0x2
    description: Shift 2-bits.
    value: 2
  - name: B_0x3
    description: Shift 3-bits.
    value: 3
  - name: B_0x4
    description: Shift 4-bits.
    value: 4
  - name: B_0x5
    description: Shift 5-bits.
    value: 5
  - name: B_0x6
    description: Shift 6-bits.
    value: 6
  - name: B_0x7
    description: Shift 7-bits.
    value: 7
  - name: B_0x8
    description: Shift 8-bits.
    value: 8
enum/PRESC:
  bit_size: 4
  variants:
  - name: B_0x0
    description: input ADC clock not divided.
    value: 0
  - name: B_0x1
    description: input ADC clock divided by 2.
    value: 1
  - name: B_0x2
    description: input ADC clock divided by 4.
    value: 2
  - name: B_0x3
    description: input ADC clock divided by 6.
    value: 3
  - name: B_0x4
    description: input ADC clock divided by 8.
    value: 4
  - name: B_0x5
    description: input ADC clock divided by 10.
    value: 5
  - name: B_0x6
    description: input ADC clock divided by 12.
    value: 6
  - name: B_0x7
    description: input ADC clock divided by 16.
    value: 7
  - name: B_0x8
    description: input ADC clock divided by 32.
    value: 8
  - name: B_0x9
    description: input ADC clock divided by 64.
    value: 9
  - name: B_0xA
    description: input ADC clock divided by 128.
    value: 10
  - name: B_0xB
    description: input ADC clock divided by 256.
    value: 11
enum/RES:
  bit_size: 2
  variants:
  - name: B_0x0
    description: 12 bits.
    value: 0
  - name: B_0x1
    description: 10 bits.
    value: 1
  - name: B_0x2
    description: 8 bits.
    value: 2
  - name: B_0x3
    description: 6 bits.
    value: 3
enum/SCANDIR:
  bit_size: 1
  variants:
  - name: B_0x0
    description: Upward scan (from CHSEL0 to CHSEL11).
    value: 0
  - name: B_0x1
    description: Backward scan (from CHSEL11 to CHSEL0).
    value: 1
enum/SMP1:
  bit_size: 3
  variants:
  - name: B_0x0
    description: 1.5 ADC clock cycles.
    value: 0
  - name: B_0x1
    description: 3.5 ADC clock cycles.
    value: 1
  - name: B_0x2
    description: 7.5 ADC clock cycles.
    value: 2
  - name: B_0x3
    description: 12.5 ADC clock cycles.
    value: 3
  - name: B_0x4
    description: 19.5 ADC clock cycles.
    value: 4
  - name: B_0x5
    description: 39.5 ADC clock cycles.
    value: 5
  - name: B_0x6
    description: 79.5 ADC clock cycles.
    value: 6
  - name: B_0x7
    description: 814.5 ADC clock cycles.
    value: 7
enum/SMP2:
  bit_size: 3
  variants:
  - name: B_0x0
    description: 1.5 ADC clock cycles.
    value: 0
  - name: B_0x1
    description: 3.5 ADC clock cycles.
    value: 1
  - name: B_0x2
    description: 7.5 ADC clock cycles.
    value: 2
  - name: B_0x3
    description: 12.5 ADC clock cycles.
    value: 3
  - name: B_0x4
    description: 19.5 ADC clock cycles.
    value: 4
  - name: B_0x5
    description: 39.5 ADC clock cycles.
    value: 5
  - name: B_0x6
    description: 79.5 ADC clock cycles.
    value: 6
  - name: B_0x7
    description: 814.5 ADC clock cycles.
    value: 7
enum/SMPSEL0:
  bit_size: 1
  variants:
  - name: B_0x0
    description: Sampling time of CHANNELx use the setting of SMP1[2:0] register.
    value: 0
  - name: B_0x1
    description: Sampling time of CHANNELx use the setting of SMP2[2:0] register.
    value: 1
enum/SMPSEL1:
  bit_size: 1
  variants:
  - name: B_0x0
    description: Sampling time of CHANNELx use the setting of SMP1[2:0] register.
    value: 0
  - name: B_0x1
    description: Sampling time of CHANNELx use the setting of SMP2[2:0] register.
    value: 1
enum/SMPSEL10:
  bit_size: 1
  variants:
  - name: B_0x0
    description: Sampling time of CHANNELx use the setting of SMP1[2:0] register.
    value: 0
  - name: B_0x1
    description: Sampling time of CHANNELx use the setting of SMP2[2:0] register.
    value: 1
enum/SMPSEL11:
  bit_size: 1
  variants:
  - name: B_0x0
    description: Sampling time of CHANNELx use the setting of SMP1[2:0] register.
    value: 0
  - name: B_0x1
    description: Sampling time of CHANNELx use the setting of SMP2[2:0] register.
    value: 1
enum/SMPSEL12:
  bit_size: 1
  variants:
  - name: B_0x0
    description: Sampling time of CHANNELx use the setting of SMP1[2:0] register.
    value: 0
  - name: B_0x1
    description: Sampling time of CHANNELx use the setting of SMP2[2:0] register.
    value: 1
enum/SMPSEL13:
  bit_size: 1
  variants:
  - name: B_0x0
    description: Sampling time of CHANNELx use the setting of SMP1[2:0] register.
    value: 0
  - name: B_0x1
    description: Sampling time of CHANNELx use the setting of SMP2[2:0] register.
    value: 1
enum/SMPSEL2:
  bit_size: 1
  variants:
  - name: B_0x0
    description: Sampling time of CHANNELx use the setting of SMP1[2:0] register.
    value: 0
  - name: B_0x1
    description: Sampling time of CHANNELx use the setting of SMP2[2:0] register.
    value: 1
enum/SMPSEL3:
  bit_size: 1
  variants:
  - name: B_0x0
    description: Sampling time of CHANNELx use the setting of SMP1[2:0] register.
    value: 0
  - name: B_0x1
    description: Sampling time of CHANNELx use the setting of SMP2[2:0] register.
    value: 1
enum/SMPSEL4:
  bit_size: 1
  variants:
  - name: B_0x0
    description: Sampling time of CHANNELx use the setting of SMP1[2:0] register.
    value: 0
  - name: B_0x1
    description: Sampling time of CHANNELx use the setting of SMP2[2:0] register.
    value: 1
enum/SMPSEL5:
  bit_size: 1
  variants:
  - name: B_0x0
    description: Sampling time of CHANNELx use the setting of SMP1[2:0] register.
    value: 0
  - name: B_0x1
    description: Sampling time of CHANNELx use the setting of SMP2[2:0] register.
    value: 1
enum/SMPSEL6:
  bit_size: 1
  variants:
  - name: B_0x0
    description: Sampling time of CHANNELx use the setting of SMP1[2:0] register.
    value: 0
  - name: B_0x1
    description: Sampling time of CHANNELx use the setting of SMP2[2:0] register.
    value: 1
enum/SMPSEL7:
  bit_size: 1
  variants:
  - name: B_0x0
    description: Sampling time of CHANNELx use the setting of SMP1[2:0] register.
    value: 0
  - name: B_0x1
    description: Sampling time of CHANNELx use the setting of SMP2[2:0] register.
    value: 1
enum/SMPSEL8:
  bit_size: 1
  variants:
  - name: B_0x0
    description: Sampling time of CHANNELx use the setting of SMP1[2:0] register.
    value: 0
  - name: B_0x1
    description: Sampling time of CHANNELx use the setting of SMP2[2:0] register.
    value: 1
enum/SMPSEL9:
  bit_size: 1
  variants:
  - name: B_0x0
    description: Sampling time of CHANNELx use the setting of SMP1[2:0] register.
    value: 0
  - name: B_0x1
    description: Sampling time of CHANNELx use the setting of SMP2[2:0] register.
    value: 1
enum/SQ8:
  bit_size: 4
  variants:
  - name: B_0x0
    description: CH0.
    value: 0
  - name: B_0x1
    description: CH1.
    value: 1
  - name: B_0xA
    description: CH10.
    value: 10
  - name: B_0xB
    description: CH11.
    value: 11
  - name: B_0xC
    description: CH12.
    value: 12
  - name: B_0xD
    description: CH13.
    value: 13
  - name: B_0xF
    description: No channel selected (End of sequence).
    value: 15
enum/TOVS:
  bit_size: 1
  variants:
  - name: B_0x0
    description: All oversampled conversions for a channel are done consecutively after a trigger.
    value: 0
  - name: B_0x1
    description: Each oversampled conversion for a channel needs a trigger.
    value: 1
enum/VREFEN:
  bit_size: 1
  variants:
  - name: B_0x0
    description: VsubREFINT/sub disabled.
    value: 0
  - name: B_0x1
    description: VsubREFINT/sub enabled.
    value: 1
enum/VSENSESEL:
  bit_size: 1
  variants:
  - name: B_0x0
    description: Temperature sensor disabled.
    value: 0
  - name: B_0x1
    description: Temperature sensor enabled.
    value: 1
enum/WAIT:
  bit_size: 1
  variants:
  - name: B_0x0
    description: Wait conversion mode off.
    value: 0
  - name: B_0x1
    description: Wait conversion mode on.
    value: 1
